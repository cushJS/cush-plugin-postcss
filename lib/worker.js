// Generated by CoffeeScript 2.3.0
var evalFile, log, path, sourceMaps;

evalFile = require('cush/utils/evalFile');

path = require('path');

log = require('lodge');

sourceMaps = {
  inline: false,
  annotation: false,
  sourcesContent: false
};

module.exports = function() {
  var postcss;
  postcss = require('postcss');
  // TODO: watch `postcss.config.js` for changes
  this.hook('package', function(pack) {
    var config;
    if (config = evalFile(path.join(pack.path, 'postcss.config.js'))) {
      config.to = '';
      config.map = sourceMaps;
      pack.postcss = config;
      return config;
    }
  });
  return this.transform('.css', (asset, pack) => {
    var config;
    if (config = pack.postcss) {
      config = Object.create(config);
      config.from = this.relative(asset.path);
      return postcss(config.plugins).process(asset.content, config).then(function(result) {
        result.warnings().forEach(function(msg) {
          return log.warn(msg + ` (${asset.path})`);
        });
        return {
          content: result.css,
          map: result.map.toJSON()
        };
      });
    }
  });
};
